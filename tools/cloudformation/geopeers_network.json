{
    "AWSTemplateFormatVersion" : "2010-09-09",

    "Description" : "VPC w/INET GW, public subnet, 2 private subnets, bastion and NAT on same instance",

    "Parameters" : {
    },

    "Mappings" : {
	"RegionParms" : {
	    "us-east-1" : {
		"CidrBlock"             : "10.1.0.0/16",
		"AZs"                   : [ "us-east-1a", "us-east-1c" ],
		"NatKeyName"            : "geopeers",
		"NatInstanceType"       : "t2.micro",
		"NatAmiId"              : "ami-4c9e4b24",
		"BastionKeyName"        : "geopeers",
		"BastionInstanceType"   : "t2.micro",
		"BastionAmiId"          : "ami-b66ed3de"
	    },
	    "us-west-1" : {
		"CidrBlock"             : "10.2.0.0/16",
		"AZs"                   : [ "us-west-1a" ],
		"AZ"                    : "us-west-1a",
		"NatKeyName"            : "geopeers",
		"NatInstanceType"       : "t2.micro",
		"NatAmiId"              : "ami-2b2b296e",
		"BastionKeyName"        : "geopeers",
		"BastionInstanceType"   : "t2.micro",
		"BastionAmiId"          : "ami-4b6f650e"
	    },
	    "us-west-2" : {
		"CidrBlock"             : "10.3.0.0/16",
		"AZs"                   : [ "us-west-2a", "us-west-2b" ],
		"AZ"                    : "us-west-2a",
		"NatKeyName"            : "geopeers",
		"NatInstanceType"       : "t2.micro",
		"NatAmiId"              : "ami-bb69128b",
		"BastionKeyName"        : "geopeers",
		"BastionInstanceType"   : "t2.micro",
		"BastionAmiId"          : "ami-b5a7ea85"
	    }
	},

	"AZParms" : {
       	    "us-east-1a" : {
	        "PublicCidrBlock"  : "10.1.1.0/24",
		"PrivateCidrBlock" : "10.1.11.0/24"
	    },
	    "us-east-1c" : {
		"PublicCidrBlock"  : "10.1.2.0/24",
		"PrivateCidrBlock" : "10.1.12.0/24"
	    },
	    "us-west-1a": {
		"PublicCidrBlock"  : "10.2.1.0/24",
		"PrivateCidrBlock" : "10.2.11.0/24"
	    },
	    "us-west-2a": {
		"PublicCidrBlock"  : "10.3.1.0/24",
		"PrivateCidrBlock" : "10.3.11.0/24"
	    },
	    "us-west-2b": {
		"PublicCidrBlock"  : "10.3.2.0/24",
		"PrivateCidrBlock" : "10.3.12.0/24"
	    }
	}
    },

    "Resources" : {

	"VPC" : {
	    "Type" : "AWS::EC2::VPC",
	    "Properties" : {
		"CidrBlock" : { "Fn::FindInMap" : ["RegionParms",
						   { "Ref" : "AWS::Region" } ,
						   "CidrBlock"] },
		"Tags" : [
		    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
		    {"Key" : "Network", "Value" : "Public" },
		    {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} }
		]
	    }
	},

	"InternetGateway" : {
	    "Type" : "AWS::EC2::InternetGateway",
	    "Properties" : {
		"Tags" : [
		    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
		    {"Key" : "Network", "Value" : "Public" },
		    {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} }
		]
	    }
	},

	"AttachGateway" : {
	    "Type" : "AWS::EC2::VPCGatewayAttachment",
	    "Properties" : {
		"VpcId" : { "Ref" : "VPC" },
		"InternetGatewayId" : { "Ref" : "InternetGateway" }
	    }
	},

	"PublicRouteTable" : {
	    "Type" : "AWS::EC2::RouteTable",
	    "Properties" : {
		"VpcId" : {"Ref" : "VPC"},
		"Tags" : [
		    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
		    {"Key" : "Network", "Value" : "Public" },
		    {"Key" : "Name",
		     "Value" : {
			"Fn::Join" : [
			    "-",
			    [ { "Ref" : "AWS::StackName" }, "Public" ]
			]
		     }
		    }
		]
	    }
	},
	
	"PublicRoute" : {
	    "Type" : "AWS::EC2::Route",
	    "Properties" : {
		"RouteTableId" : { "Ref" : "PublicRouteTable" },
		"DestinationCidrBlock" : "0.0.0.0/0",
		"GatewayId" : { "Ref" : "InternetGateway" }
	    }
	},
	
	"PublicSubnet" : {
	    "Type" : "AWS::EC2::Subnet",
	    "Properties" : {
		"VpcId" : { "Ref" : "VPC" },
		"AvailabilityZone" : {
			    "Fn::FindInMap" : [
				"RegionParms",
				{ "Ref" : "AWS::Region" },
				"AZ"
			    ]
		},
		"CidrBlock" : {
		    "Fn::FindInMap" : [
			"AZParms",
			"us-west-2a",
			"PublicCidrBlock"
		    ]
		},
		"Tags" : [
		    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
		    {"Key" : "Network", "Value" : "Public" },
		    {"Key" : "Name",
		     "Value" : {
			"Fn::Join" : [
			    "-",
			    [ { "Ref" : "AWS::StackName" }, "Public" ]
			]
		     }
		    }
		]
	    }
	},

	"PublicSubnetRouteTableAssociation" : {
	    "Type" : "AWS::EC2::SubnetRouteTableAssociation",
	    "Properties" : {
		"SubnetId" : { "Ref" : "PublicSubnet" },
		"RouteTableId" : { "Ref" : "PublicRouteTable" }
	    }
	},

	"PrivateSubnetA" : {
	    "Type" : "AWS::EC2::Subnet",
	    "Properties" : {
		"VpcId" : { "Ref" : "VPC" },
		"AvailabilityZone" : {
		    "Fn::Select" : [ 0,
				     { "Fn::FindInMap" : ["RegionParms",
							  {"Ref" : "AWS::Region"},
							  "AZs"] }
				   ]
		},
		"CidrBlock" : {
		    "Fn::FindInMap" : ["AZParms",
				       "us-west-2a",
				       "PrivateCidrBlock"]
		},
		"Tags" : [
		    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
		    {"Key" : "Network", "Value" : "Private" },
		    {"Key" : "Name",
		     "Value" : {
			"Fn::Join" : [
			    "-",
			    [ { "Ref" : "AWS::StackName" }, "Private A" ]
			]
		     }
		    }

		]
	    }
	},

	"PrivateRouteTableA" : {
	    "Type" : "AWS::EC2::RouteTable",
	    "Properties" : {
		"VpcId" : {"Ref" : "VPC"},
		"Tags" : [
		    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
		    {"Key" : "Network", "Value" : "Private A" },
		    {"Key" : "Name",
		     "Value" : {
			"Fn::Join" : [
			    "-",
			    [ { "Ref" : "AWS::StackName" }, "Private B" ]
			]
		     }
		    }
		]
	    }
	},
	
	"PrivateRouteA" : {
	    "Type" : "AWS::EC2::Route",
	    "DependsOn" : "PublicSubnetNATInstance",
	    "Properties" : {
		"RouteTableId" : { "Ref" : "PrivateRouteTableA" },
		"DestinationCidrBlock" : "0.0.0.0/0",
		"InstanceId" : { "Ref" : "PublicSubnetNATInstance" }
	    }
	},
	
	"PrivateSubnetRouteTableAssociationA" : {
	    "Type" : "AWS::EC2::SubnetRouteTableAssociation",
	    "Properties" : {
		"SubnetId" : { "Ref" : "PrivateSubnetA" },
		"RouteTableId" : { "Ref" : "PrivateRouteTableA" }
	    }
	},

	"PrivateSubnetB" : {
	    "Type" : "AWS::EC2::Subnet",
	    "Properties" : {
		"VpcId" : { "Ref" : "VPC" },
		"AvailabilityZone" : {
		    "Fn::Select" : [ 1,
				     { "Fn::FindInMap" : ["RegionParms",
							  {"Ref" : "AWS::Region"},
							  "AZs"] }
				   ]
		},
		"CidrBlock" : {
		    "Fn::FindInMap" : ["AZParms",
				       "us-west-2b",
				       "PrivateCidrBlock"]
		},
		"Tags" : [
		    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
		    {"Key" : "Network", "Value" : "Private" },
		    {"Key" : "Name",
		     "Value" : {
			"Fn::Join" : [
			    "-",
			    [ { "Ref" : "AWS::StackName" }, "Private B" ]
			]
		     }
		    }
		]
	    }
	},

	"PrivateRouteTableB" : {
	    "Type" : "AWS::EC2::RouteTable",
	    "Properties" : {
		"VpcId" : {"Ref" : "VPC"},
		"Tags" : [
		    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
		    {"Key" : "Network", "Value" : "Public" },
		    {"Key" : "Name",
		     "Value" : {
			"Fn::Join" : [
			    "-",
			    [ { "Ref" : "AWS::StackName" }, "Private B" ]
			]
		     }
		    }
		]
	    }
	},
	
	"PrivateRouteB" : {
	    "Type" : "AWS::EC2::Route",
	    "DependsOn" : "PublicSubnetNATInstance",
	    "Properties" : {
		"RouteTableId" : { "Ref" : "PrivateRouteTableB" },
		"DestinationCidrBlock" : "0.0.0.0/0",
		"InstanceId" : { "Ref" : "PublicSubnetNATInstance" }
	    }
	},
	
	"PrivateSubnetRouteTableAssociationB" : {
	    "Type" : "AWS::EC2::SubnetRouteTableAssociation",
	    "Properties" : {
		"SubnetId" : { "Ref" : "PrivateSubnetB" },
		"RouteTableId" : { "Ref" : "PrivateRouteTableB" }
	    }
	},

	"PublicSubnetNATInstance" : {
	    "Type" : "AWS::EC2::Instance",
	    "Properties" : {
		"KeyName" : {
		    "Fn::FindInMap" : [
			"RegionParms",
			{"Ref" : "AWS::Region"},
			"NatKeyName"
		    ]
		},
		"InstanceType" : {
		    "Fn::FindInMap" : [
			"RegionParms",
			{ "Ref" : "AWS::Region" },
			"NatInstanceType"
		    ]
		},
		"SourceDestCheck" : "false",
		"ImageId" : {
		    "Fn::FindInMap" : ["RegionParms",
				       { "Ref" : "AWS::Region" } ,
				       "NatAmiId"]
		},
		"NetworkInterfaces" : [{
		    "SubnetId"                 : { "Ref" : "PublicSubnet" },
		    "GroupSet"                 : [{ "Ref" : "NatSecurityGroup" }],
		    "AssociatePublicIpAddress" : "true",
		    "DeviceIndex"              : "0",
		    "DeleteOnTermination"      : "true"
		}],
		"Tags" : [
		    { "Key" : "Name", "Value" : "geopeers_nat_bastion" }
		],
		"UserData" : {
		    "Fn::Base64" : {
			"Fn::Join" : [
			    "\n", [
				"#!/bin/bash -xe",
				"/usr/bin/yum -y install emacs telnet tcpdump git compat-libtermcap",
				"/usr/sbin/useradd geopeers",
				"/usr/bin/git clone https://scott:scott_kaplan@magtogo.gitsrc.com/git/chef-repo.git",
				"/usr/bin/curl https://opscode-omnibus-packages.s3.amazonaws.com/el/6/x86_64/chefdk-0.3.5-1.x86_64.rpm -o chefdk-0.3.5-1.x86_64.rpm",
				"/bin/rpm -U chefdk-0.3.5-1.x86_64.rpm",
				"\n"
			    ]
			]
		    }
		}
	    }
	},

	"NatSecurityGroup" : {
	    "Type" : "AWS::EC2::SecurityGroup",
	    "Properties" : {
		"GroupDescription" : "NAT Security Group",
		"VpcId" : { "Ref" : "VPC" },
		"SecurityGroupIngress" : [
		    {
			"IpProtocol" : "tcp",
			"FromPort" : "22",
			"ToPort" : "22",
			"CidrIp" : "0.0.0.0/0"
		    },
		    {
			"IpProtocol" : "tcp",
			"FromPort" : "80",
			"ToPort" : "80",
			"CidrIp" : { "Fn::FindInMap" : ["RegionParms",
							{ "Ref" : "AWS::Region" },
							"CidrBlock"] }
		    },
		    {
			"IpProtocol" : "tcp",
			"FromPort" : "443",
			"ToPort" : "443",
			"CidrIp" : { "Fn::FindInMap" : ["RegionParms",
							{ "Ref" : "AWS::Region" },
							"CidrBlock"] }
		    }
		],
		"SecurityGroupEgress" : [
		    {
			"IpProtocol" : "tcp",
			"FromPort" : "22",
			"ToPort" : "22",
			"CidrIp" : "0.0.0.0/0"
		    },
		    {
			"IpProtocol" : "tcp",
			"FromPort" : "80",
			"ToPort" : "80",
			"CidrIp" : "0.0.0.0/0"
		    },
		    {
			"IpProtocol" : "tcp",
			"FromPort" : "443",
			"ToPort" : "443",
			"CidrIp" : "0.0.0.0/0"
		    }
		],
		"Tags" : [
		    {"Key" : "Name",
		     "Value" : {
			"Fn::Join" : [
			    "-",
			    [ { "Ref" : "AWS::StackName" }, "Public" ]
			]
		     }
		    }
		]
	    }
	},
	
	"BastionEIPAddress" : {
	    "Type" : "AWS::EC2::EIP",
	    "Properties" : {
		"InstanceId" : { "Ref" : "PublicSubnetNATInstance" },
		"Domain"     : "vpc"
	    }
	},

	"BastionEIPAddressAssociation" : {
	    "Type" : "AWS::EC2::EIPAssociation",
	    "DependsOn" : "AttachGateway",
	    "Properties" : {
		"InstanceId" : { "Ref" : "PublicSubnetNATInstance" },
		"AllocationId" : { "Fn::GetAtt" : [ "BastionEIPAddress", "AllocationId" ]}
	    }
	},

	"BastionDNSRecord" : {
	    "Type" : "AWS::Route53::RecordSet",
	    "DependsOn" : "BastionEIPAddressAssociation",
	    "Properties" : {
		"HostedZoneName" : "geopeers.com.",
		"Name" : "bastion.geopeers.com",
		"Type" : "A",
		"TTL" : "900",
		"ResourceRecords" : [ { "Fn::GetAtt" : [ "PublicSubnetNATInstance", "PublicIp" ] } ]
            }
	}
    },

    "Outputs" : {
	"VpcId" : {
	    "Value" : {"Ref" : "VPC"},
	    "Description" : "VPC ID of newly created VPC"
	},
	"PublicSubnet" : {
	    "Value" : {"Ref" : "PublicSubnet"},
	    "Description" : "Public Subnet"
	},
	"PrivateSubnetA" : {
	    "Value" : {"Ref" : "PrivateSubnetA"},
	    "Description" : "Private Subnet A"
	},
	"PrivateSubnetB" : {
	    "Value" : {"Ref" : "PrivateSubnetB"},
	    "Description" : "Private Subnet B"
	}

    }
}
